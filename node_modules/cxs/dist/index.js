'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cache = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _murmurhash3_gc = require('murmurhash-js/murmurhash3_gc');

var _murmurhash3_gc2 = _interopRequireDefault(_murmurhash3_gc);

var _createRules = require('./create-rules');

var _createRules2 = _interopRequireDefault(_createRules);

var _sheet = require('./sheet');

var _sheet2 = _interopRequireDefault(_sheet);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var cache = exports.cache = [];

var cxs = function cxs() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var selector = typeof args[0] === 'string' ? args[0] : null;
  var style = args.reduce(function (a, b) {
    return a || (typeof b === 'undefined' ? 'undefined' : _typeof(b)) === 'object' ? b : null;
  }, null);
  var classNames = [];
  var hashname = 'cxs-' + (0, _murmurhash3_gc2.default)(JSON.stringify(style), 128);
  var rules = (0, _createRules2.default)(selector || hashname, style);

  rules.filter(function (r) {
    return !/:/.test(r.selector);
  }).filter(function (r) {
    return !/\s/.test(r.selector);
  }).forEach(function (r) {
    classNames.push(r.selector.replace(/^\./, ''));
  });

  rules.filter(function (r) {
    return cache.indexOf(r.id) < 0;
  }).forEach(function (r) {
    cache.push(r.id);
    _sheet2.default.insert(r.css);
  });

  return classNames.reduce(function (a, b) {
    if (a.indexOf(b) > -1) return a;
    return [].concat(_toConsumableArray(a), [b]);
  }, []).join(' ');
};

cxs.sheet = _sheet2.default;

cxs.clear = function () {
  while (cache.length) {
    cache.pop();
  }
};

cxs.reset = function () {
  cxs.clear();
  cxs.sheet.flush();
};

Object.defineProperty(cxs, 'rules', {
  get: function get() {
    return _sheet2.default.rules();
  }
});

Object.defineProperty(cxs, 'css', {
  get: function get() {
    return _sheet2.default.rules().map(function (r) {
      return r.cssText;
    }).join('');
  }
});

exports.default = cxs;